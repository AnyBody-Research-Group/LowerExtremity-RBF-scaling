#class_template CreateLoadPositions(DynamicPos) {
  
    #if DynamicPos == 1
        
          #var AnyVec3 iCluster1;
          #var AnyVec3 iCluster2; 
          #var AnyVec3 iCluster3; 
          #var AnyVec3 sCluster1;
          #var AnyVec3 sCluster2; 
          #var AnyVec3 sCluster3; 

          
        
        // Calculate initial postions based on dynamic markerset
           // Global rotation of the two marker clusters
         AnyMatrix Axes0_iCluster = RotMat(iCluster1, iCluster2, iCluster3);
         AnyMatrix Axes0_sCluster  = RotMat(sCluster1, sCluster2, sCluster3);
           // Relative rotation matrix for the marker cluster to the segment
         AnyMatrix ARel_Cluster = .Axes0_static' * Axes0_sCluster ;
           // Rotation matrix for initial position
          
          //#if UseStaticLoadPosition == 0
           AnyMatrix Axes0 = Axes0_iCluster*ARel_Cluster';
          //#else
          // AnyMatrix Axes0 = Axes0_iCluster*ARel_Cluster';
          //#endif
         
           //Position of the two marker clusters
         AnyVec3 r0_iCluster = (iCluster1 + iCluster2 + iCluster3) /3;
         AnyVec3 r0_sCluster = (sCluster1 + sCluster2 + sCluster3) /3;
           // Relative position vector for the cluster
         AnyVec3 sRel_Cluster = ( .Axes0_static'*(r0_sCluster - .r0_static)' )';
           // Initial positions of segments
          //#if UseStaticLoadPosition == 0
           AnyVec3 r0 = r0_iCluster - ( Axes0 * sRel_Cluster' )';        
          //#else
           //AnyMatrix Axes0 = Axes0_iCluster*ARel_Cluster';
          //#endif
          
   #else
         
        
          #var AnyVec3 iCluster1;
          #var AnyVec3 iCluster2; 
          #var AnyVec3 iCluster3; 
          #var AnyVec3 sCluster1;
          #var AnyVec3 sCluster2; 
          #var AnyVec3 sCluster3; 

         AnyMatrix Axes0 = .Axes0_static;
         
         AnyVec3 r0 = .r0_static; 
       
   #endif         
   };
  
#class_template Link2StickFigure(name,LegModelVar,StickFigureVar ) {
  
  AnyFolder &ref = .DesStudy;
  ref = {
   
   
  AnyDesVar name##_X = {
    Val = LegModelVar[0];
  };
  //AnyDesVar &<Insert name1> = <Insert object reference (or full object definition)>; You can make any number of these objects!
  AnyDesMeasure name##SF_X = {
    Val = StickFigureVar[0];
  };  
  
  AnyDesVar name##_Y = {
    Val = LegModelVar[1];
  };
  AnyDesMeasure name##SF_Y = {
    Val = StickFigureVar[1];
  };
  
  AnyDesVar name##_Z = {
    Val = LegModelVar[2];
  };
  AnyDesMeasure name##_SF_Z = {
    Val = StickFigureVar[2];
  };

  
 };
  
  
};